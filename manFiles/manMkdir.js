let manLs = '<h1>ls</h1>';
manLs +="<h2>Name</h2>";

let manMkdir = "<h2>Name</h2>";
        manMkdir += "<p>mkdir - make directories</p>";
        manMkdir += "<h2>Synopsis</h2>";
        manMkdir += "<b>mkdir</b> [<i>OPTION</i>]... <i>DIRECTORY</i>...";
        manMkdir += "<h2>Description</h2>";
        manMkdir += "<p>Create the DIRECTORY(ies), if they do not already exist.";
        manMkdir += "<p>Mandatory arguments to long options are mandatory for short options too.";
        manMkdir += "<dl compact>";
        manMkdir += "<dt><b>-m</b>, <b>--mode</b>=<i>MODE</i>";
        manMkdir += "<dd>set file mode (as in chmod), not a=rwx - umask";
        manMkdir += "<dt><b>-p</b>, <b>--parents</b>";
        manMkdir += "<dd>no error if existing, make parent directories as needed";
        manMkdir += "<dt><b>-v</b>, <b>--verbose</b>";
        manMkdir += "<dd>print a message for each created directory";
        manMkdir += "<dt><b>-Z</b>, <b>--context</b>=<i>CTX</i>";
        manMkdir += "<dd>set the SELinux security context of each created directory to CTX";
        manMkdir += "<dt><b>--help</b>";
        manMkdir += "<dd>display this help and exit";
        manMkdir += "<dt><b>--version</b>";
        manMkdir += "<dd>output version information and exit</dl>";
        manMkdir += "<h2>Description</h2>";
        manMkdir += "<b>mkdir</b>() attempts to create a directory named <i>pathname</i>.";
        manMkdir += "<p>The argument <i>mode</i> specifies the permissions to use. It is modified by the process's <i>umask</i> in the usual way: the permissions of the created";
        manMkdir += "directory are (<i>mode</i> &amp; ~<i>umask</i> &amp; 0777). Other mode bits of the created directory depend on the operating system. For Linux, see below.";
        manMkdir += "<p>The newly created directory will be owned by the effective user ID of the process. If the directory containing the file has the set-group-ID bit set, or if";
        manMkdir += "the file system is mounted with BSD group semantics (<i>mount -o bsdgroups</i> or, synonymously <i>mount -o grpid</i>), the new directory will inherit the";
        manMkdir += "group ownership from its parent; otherwise it will be owned by the effective group ID of the process.";
        manMkdir += "<p>If the parent directory has the set-group-ID bit set then so will the newly created directory.";
        manMkdir += "<h2>Return Value</h2>";
        manMkdir += "<b>mkdir</b>() returns zero on success, or -1 if an error occurred (in which case,";
        manMkdir += "<i>errno</i> is set appropriately).";
        manMkdir += "<h2>Errors</h2>";
        manMkdir += "<dl compact>";
        manMkdir += "<dt><b>EACCES</b>";
        manMkdir += "<dd>The parent directory does not allow write permission to the process, or one of the directories in <i>pathname</i> did not allow search permission. ";
        manMkdir += "<dt><b>EDQUOT</b>";
        manMkdir += "<dd>The user's quota of disk blocks or inodes on the file system has been exhausted.";
        manMkdir += "<dt><b>EEXIST</b>";
        manMkdir += "<dd><i>pathname</i> already exists (not necessarily as a directory). This includes the case where <i>pathname</i> is a symbolic link, dangling or not.";
        manMkdir += "<dt><b>EFAULT</b>";
        manMkdir += "<dd><i>pathname</i> points outside your accessible address space.";
        manMkdir += "<dt><b>ELOOP</b>";
        manMkdir += "<dd>Too many symbolic links were encountered in resolving <i>pathname</i>.";
        manMkdir += "<dt><b>EMLINK</b>";
        manMkdir += "<dd>The number of links to the parent directory would exceed <b>LINK_MAX</b>.";
        manMkdir += "<dt><b>ENAMETOOLONG</b>";
        manMkdir += "<dd><i>pathname</i> was too long.";
        manMkdir += "<dt><b>ENOENT</b>";
        manMkdir += "<dd>A directory component in <i>pathname</i> does not exist or is a dangling symbolic link.";
        manMkdir += "<dt><b>ENOMEM</b>";
        manMkdir += "<dd>Insufficient kernel memory was available.";
        manMkdir += "<dt><b>ENOSPC</b>";
        manMkdir += "<dd>The device containing <i>pathname</i> has no room for the new directory.";
        manMkdir += "<dt><b>ENOSPC</b>";
        manMkdir += "<dd>The new directory cannot be created because the user's disk quota is exhausted.";
        manMkdir += "<dt><b>ENOTDIR</b>";
        manMkdir += "<dd>A component used as a directory in <i>pathname</i> is not, in fact, a directory.";
        manMkdir += "<dt><b>EPERM</b>";
        manMkdir += "<dd>The file system containing <i>pathname</i> does not support the creation of directories.";
        manMkdir += "<dt><b>EROFS</b>";
        manMkdir += "<dd><i>pathname</i> refers to a file on a read-only file system.</dl>";
        manMkdir += "<h2>Conforming to</h2>";
        manMkdir += "SVr4, BSD, POSIX.1-2001.";
        manMkdir += "<h2>Notes</h2>";
        manMkdir += "Under Linux apart from the permission bits, only the <b>S_ISVTX</b> mode bit is honored. That is,";
        manMkdir += "under Linux the created directory actually gets mode (<i>mode</i> &amp; ~<i>umask</i> &amp; 01777). See also <i><b><a href="stat">stat</a></b>(2)</i>.";
        manMkdir += "<p>There are many infelicities in the protocol underlying NFS. Some of these affect <b>mkdir</b>().";
        manMkdir += "<h2>Author</h2>";
        manMkdir += "Written by David MacKenzie.";

exports.manMkdir = manMkdir;